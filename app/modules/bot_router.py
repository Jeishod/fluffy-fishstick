from aiogram import Router
from aiogram.filters import Command, Text
from aiogram.types import KeyboardButton, Message, ReplyKeyboardMarkup
from jinja2 import Template
from loguru import logger as LOGGER

from app.db.crud_triggers import KucoinTriggersManager
from app.managers import triggers_manager
from app.modules.cache import Cache


triggers_message_template = Template(
    source="""
{% for trigger in all_triggers %}
‚úÖ<b>{{ trigger.from_symbol }}-{{ trigger.to_symbol }}</b>
triggering count: <b>{{ trigger.transactions_max_count }}</b>
current count: <b>{{ trigger.current_count }}</b>
period, sec: <b>{{ trigger.period_seconds }}</b>
side: <b>{{ trigger.side }}</b>
all transactions count: <b>{{ trigger.transactions_count }}</b>
{% endfor %}
""",
)


router = Router()


@router.message(Command("start"))
async def cmd_start(message: Message):
    kb = [
        [KeyboardButton(text="–°–ø–∏—Å–æ–∫ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤"), KeyboardButton(text="–ù–∏—á–µ–≥–æ")],
    ]
    keyboard = ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True, input_field_placeholder="–í—ã–±–µ—Ä–∏ —á–æ —Ö–æ—á–µ—à—å")
    await message.answer("–ß–æ —Ö–æ—Ç–∏–º?", reply_markup=keyboard)


@router.message(Text("–°–ø–∏—Å–æ–∫ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤"))
async def handle_triggers_list(
    message: Message,
    db_triggers: KucoinTriggersManager,
    cache: Cache,
):
    LOGGER.debug("[BOT] Triggers statuses requested")
    all_triggers = await triggers_manager.get_all(db_triggers=db_triggers, cache=cache)
    if not all_triggers:
        filled_triggers_list_template = "There is no active triggers."
    else:
        filled_triggers_list_template = triggers_message_template.render(all_triggers=all_triggers)

    await message.reply(text=filled_triggers_list_template)


@router.message(Text("–ù–∏—á–µ–≥–æ"))
async def handle_nothing(message: Message):
    await message.reply("–ù—É –∏ –ª–∞–¥–Ω–æ, –ø–∞–∫–∞!üëã")
